## Fonctions graphiques {.unnumbered}

### Exercice 11 : quelques graphiques de base en $R$ {.unnumbered}

1.  Chargez le jeu de données irisdéjà présent dans $R$.
2.  Pour chaque espèce de fleurs, indiquez le nombre de lignes.
3.  A partir du résultat précédent, réalisez une représentation en camembert (pie chart), puis en bâtons (barplot). Indice pie()
4.  Tapez la ligne de commande suivante : summary (iris).

Quel résultat obtenez-vous ? 5. Une représentation adéquate est la boîte à moustache (boxplot). Créez un boxplot pour les 4 variables numériques du jeu de données iris. Indice boxplot() 6. Réalisez le même graphique en ajoutant un titre et en supprimant les valeurs extrêmes. 7. Représentez le pie chart et le boxplot sur la même fenêtre graphique. Indice par(), option mfrow. 8. Exportez le graphique précédent en pdf sur votre machine. Indice pdf() ; dev.off() 9. Représenter un scatter plot simple avec en abscisse la longueur des pétales et en ordonnées leur largeur. Indice plot 10. Afin de découvrir les différents paramètres de la fonction plot, refaite le même graphique qu'à la fonction précédente en :

-   augmentant la taille des points Indice : cex
-   remplaçant les points par des triangles de couleur rouge Indice pch option
-   ajoutant une ligne horizontale en pointillé à $y=1$ Indice : abline

```         
#1
data(iris)
#2
p = table(iris$Species)
#3
pie(p)
barplot(p)
#4
summary(iris)
#5
boxplot(iris[,1:4])
```

```         
#6
boxplot(iris[,1:4], title="Iris Boxplot", outline=FALSE)
#7
par(mfrow=c(1,2))
boxplot(iris[,1:4], title="Iris Boxplot", outline=FALSE)
pie(p)
#8
pdf("plotIris.pdf")
par(mfrow=c(1,2))
boxplot(iris[,1:4], title="Iris Boxplot", outline=FALSE)
pie(p)
dev.off()
#9
plot(iris$Petal.Length, iris$Petal.Width)
#10
plot(iris$Petal.Length, iris$Petal.Width, cex=5)
plot(iris$Petal.Length, iris$Petal.Width, pch=17, col="red")
abline(h=1, lty=2)
#9
pairs(iris[,1:4], col=as.numeric(iris$Species), pch=16)
#10
pdf("pairs_iris.pdf")
pairs(iris[,1:4], col=as.numeric(iris$Species), pch=16)
dev.off()
```

### Exercice 12 : distribution et density plot {.unnumbered}

1.  Charger le jeu de données airquality.
2.  Prendre connaissance des données (dimension, type).
3.  Construire un histogramme de la variable Ozone. Représenter l'histogramme en terme de probabilité de densité plutôt qu'en terme de fréquence (axe Y). Ajouter un titre, modifier le noms des axes, et colorer les barres de l'histogramme en gris et les traits de l'histogramme en bleu. Augmenter la taille du pas de l'histogramme à 30 .
4.  Regarder l'aide de la fonction density (). Appliquer cette fonction à la variable Ozone. Cela retourne-t-il une erreur ? Pourquoi ? Corriger la en spécifiant une option.
5.  Ajouter la courbe de densité précédemment générer à l'histogramme. Indice lines()

```         
data(airquality)
hist(airquality$Ozone)
hist(airquality$Ozone, freq=FALSE, main="Histogramme Ozone", xlab="Ozone", ylab="Densité", col = "gray"
hist(airquality$Ozone, freq=FALSE, main="Histogramme Ozone", xlab="Ozone", ylab="Densité", col = "gray"
        breaks=30)
d = density(airquality$Ozone, na.rm=TRUE)
lines(d)
```
